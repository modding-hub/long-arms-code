 #region long arms 
        static float timeSinceLastChange = 0f;
        static float myVarY1 = 0f;
        static float myVarY2 = 0f;
        static bool gain = false;
        static bool less = false;
        static bool reset = false;
        static bool fastr = false;
        static bool speed1 = true;
        static float gainSpeed = 1f;

        static void ProcessLongArms()
        {
            //bool flag = false;
            //if (!flag)
            //{
            //    GorillaLocomotion.Player.Instance.leftHandOffset = new Vector3(0f, 0f, 0f);
            //    GorillaLocomotion.Player.Instance.rightHandOffset = new Vector3(0f, 0f, 0f);
            //}
            //if (!flag)
            //{
            //    return;
            //}
            //List<UnityEngine.XR.InputDevice> list = new List<UnityEngine.XR.InputDevice>();
            //InputDevices.GetDevicesWithCharacteristics((InputDeviceCharacteristics)580, list);
            //UnityEngine.XR.InputDevice val = list[0];
            //val.TryGetFeatureValue(UnityEngine.XR.CommonUsages.gripButton, out gain);
            //val.TryGetFeatureValue(UnityEngine.XR.CommonUsages.triggerButton, out less);
            //val.TryGetFeatureValue(UnityEngine.XR.CommonUsages.primaryButton, out reset);
            //val.TryGetFeatureValue(UnityEngine.XR.CommonUsages.secondaryButton, out fastr);

            List<UnityEngine.XR.InputDevice> list = new List<UnityEngine.XR.InputDevice>();
            InputDevices.GetDevicesWithCharacteristics(UnityEngine.XR.InputDeviceCharacteristics.HeldInHand | UnityEngine.XR.InputDeviceCharacteristics.Right | UnityEngine.XR.InputDeviceCharacteristics.Controller, list);
            list[0].TryGetFeatureValue(UnityEngine.XR.CommonUsages.gripButton, out gain);
            list[0].TryGetFeatureValue(UnityEngine.XR.CommonUsages.triggerButton, out less);
            list[0].TryGetFeatureValue(UnityEngine.XR.CommonUsages.primaryButton, out reset);
            list[0].TryGetFeatureValue(UnityEngine.XR.CommonUsages.secondaryButton, out fastr);

            timeSinceLastChange += Time.deltaTime;
            if (timeSinceLastChange <= 0.2f)
            {
                return;
            }
            GorillaLocomotion.Player.Instance.leftHandOffset = new Vector3(0f, myVarY1, 0f);
            GorillaLocomotion.Player.Instance.rightHandOffset = new Vector3(0f, myVarY2, 0f);
            GorillaLocomotion.Player.Instance.maxArmLength = 200f;
            if (gain)
            {
                timeSinceLastChange = 0f;
                myVarY1 += gainSpeed;
                myVarY2 += gainSpeed;
                if (myVarY1 >= 201f)
                {
                    myVarY1 = 200f;
                    myVarY2 = 200f;
                }
            }
            if (less)
            {
                timeSinceLastChange = 0f;
                myVarY1 -= gainSpeed;
                myVarY2 -= gainSpeed;
                if (myVarY2 <= -6f)
                {
                    myVarY1 = -5f;
                    myVarY2 = -5f;
                }
            }
            if (reset)
            {
                timeSinceLastChange = 0f;
                myVarY1 = 0f;
                myVarY2 = 0f;
            }
            if (fastr && myVarY1 == 5f)
            {
                myVarY1 = 10f;
                myVarY2 = 10f;
            }


        }


        #endregion
